name: "Detailed File Statistics"

on:
  pull_request:
    paths:
      - '00_Правила_оформления/**/*.md'
      - '01_Вселенная/**/*.md'
      - '02_Станция/**/*.md'
      - '03_Государства/**/*.md'
      - '04_Корпорации/**/*.md'
      - '05_Организации/**/*.md'
      - '06_Расы/**/*.md'
      - '07_Существа/**/*.md'
      - '08_Технологии/**/*.md'
      - '09_Вооружение/**/*.md'
      - '10_Явления/**/*.md'
      - '11_Товары/**/*.md'
      - '12_Другое/**/*.md'
      - '13_Истории/**/*.md'
      - '14_Повседневность/**/*.md'

jobs:
  pr-statistics:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Установка Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Шаг 3: Установка зависимостей
      - name: Install dependencies
        run: pip install regex

      # Шаг 4: Анализ изменений в файлах
      - name: Analyze changes
        id: analyze_changes
        run: |
          python - <<EOF
          import os
          import re
          import json
          from subprocess import check_output

          # Функция для подсчета слов, символов, символов без пробелов и знаков препинания
          def analyze_text(text):
              words = len(re.findall(r'\\b\\w+\\b', text))
              chars = len(text)
              chars_no_spaces = len(text.replace(" ", ""))
              punctuation = len(re.findall(r'[!\"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~]', text))
              return {
                  "words": words,
                  "chars": chars,
                  "chars_no_spaces": chars_no_spaces,
                  "punctuation": punctuation
              }

          # Получаем измененные строки через git diff
          base_branch = os.environ['GITHUB_BASE_REF']
          diff_output = check_output(["git", "diff", "--unified=0", f"origin/{base_branch}"], encoding="utf-8")
          file_changes = {}

          # Обработка изменений
          current_file = None
          for line in diff_output.splitlines():
              if line.startswith("+++ b/"):
                  current_file = line[6:]  # Имя файла
                  file_changes[current_file] = {"added_lines": "", "removed_lines": "", "stats": {}}
              elif line.startswith("+") and not line.startswith("+++"):
                  file_changes[current_file]["added_lines"] += line[1:].strip() + "\n"
              elif line.startswith("-") and not line.startswith("---"):
                  file_changes[current_file]["removed_lines"] += line[1:].strip() + "\n"

          # Подсчитываем статистику для каждого файла
          total_stats = {"added": {"words": 0, "chars": 0, "chars_no_spaces": 0, "punctuation": 0},
                         "removed": {"words": 0, "chars": 0, "chars_no_spaces": 0, "punctuation": 0},
                         "final": {"words": 0, "chars": 0, "chars_no_spaces": 0, "punctuation": 0}}

          for file, changes in file_changes.items():
              # Добавленные строки
              added_stats = analyze_text(changes["added_lines"])
              # Удаленные строки
              removed_stats = analyze_text(changes["removed_lines"])

              # Итоговая статистика файла после изменений
              with open(file, "r", encoding="utf-8") as f:
                  full_text = f.read()
              final_stats = analyze_text(full_text)

              # Сохраняем статистику
              file_changes[file]["stats"] = {
                  "added": added_stats,
                  "removed": removed_stats,
                  "final": final_stats
              }

              # Суммируем итоговую статистику для репозитория
              for key in total_stats["added"]:
                  total_stats["added"][key] += added_stats[key]
                  total_stats["removed"][key] += removed_stats[key]
                  total_stats["final"][key] += final_stats[key]

          # Сохраняем результаты
          results = {
              "total_files": len(file_changes),
              "file_changes": file_changes,
              "total_stats": total_stats
          }
          with open("statistics.json", "w", encoding="utf-8") as f:
              json.dump(results, f, ensure_ascii=False, indent=2)
          EOF

      # Шаг 5: Добавление комментария к PR
      - name: Comment on PR with statistics
        uses: actions/github-script@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const stats = JSON.parse(fs.readFileSync('statistics.json', 'utf-8'));

            let body = "### Статистика изменений в Pull Request:\n\n";
            body += `- **Общее количество измененных файлов:** ${stats.total_files}\n\n`;

            body += `### Детализация по файлам:\n`;
            for (const [file, data] of Object.entries(stats.file_changes)) {
              body += `- **${file}**:\n`;
              body += `  - Убрано слов: ${data.stats.removed.words}\n`;
              body += `  - Убрано символов: ${data.stats.removed.chars}\n`;
              body += `  - Убрано символов без пробелов: ${data.stats.removed.chars_no_spaces}\n`;
              body += `  - Убрано знаков препинания: ${data.stats.removed.punctuation}\n`;
              body += `  - Добавлено слов: ${data.stats.added.words}\n`;
              body += `  - Добавлено символов: ${data.stats.added.chars}\n`;
              body += `  - Добавлено символов без пробелов: ${data.stats.added.chars_no_spaces}\n`;
              body += `  - Добавлено знаков препинания: ${data.stats.added.punctuation}\n`;
              body += `  - Итоговое количество слов: ${data.stats.final.words}\n`;
              body += `  - Итоговое количество символов: ${data.stats.final.chars}\n`;
              body += `  - Итоговое количество символов без пробелов: ${data.stats.final.chars_no_spaces}\n`;
              body += `  - Итоговое количество знаков препинания: ${data.stats.final.punctuation}\n\n`;
            }

            if (stats.total_files > 1) {
              body += `### Итоговая текстовая статистика для всего Pull Request:\n`;
              body += `- **Всего убрано слов:** ${stats.total_stats.removed.words}\n`;
              body += `- **Всего убрано символов:** ${stats.total_stats.removed.chars}\n`;
              body += `- **Всего убрано символов без пробелов:** ${stats.total_stats.removed.chars_no_spaces}\n`;
              body += `- **Всего убрано знаков препинания:** ${stats.total_stats.removed.punctuation}\n`;
              body += `- **Всего добавлено слов:** ${stats.total_stats.added.words}\n`;
              body += `- **Всего добавлено символов:** ${stats.total_stats.added.chars}\n`;
              body += `- **Всего добавлено символов без пробелов:** ${stats.total_stats.added.chars_no_spaces}\n`;
              body += `- **Всего добавлено знаков препинания:** ${stats.total_stats.added.punctuation}\n`;
              body += `- **Итоговое количество слов:** ${stats.total_stats.final.words}\n`;
              body += `- **Итоговое количество символов:** ${stats.total_stats.final.chars}\n`;
              body += `- **Итоговое количество символов без пробелов:** ${stats.total_stats.final.chars_no_spaces}\n`;
              body += `- **Итоговое количество знаков препинания:** ${stats.total_stats.final.punctuation}\n`;
            }

            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
